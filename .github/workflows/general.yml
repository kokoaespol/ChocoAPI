name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pg-user: [postgres]
        pg-password: [LOCALTESTINGxmhu5jVVwJ4sMlz7DAdKf0z4QPFY9Yc]
        pg-db: [chocodb]
        sqlx-version: [0.6.0]
        sqlx-features: ["postgres rustls"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
            ~/.cargo/bin/cargo-sqlx
          key: ${{ runner.os }}-sqlx-${{ matrix.sqlx-version }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ matrix.sqlx-version }}
            --features "${{ matrix.sqlx-features }}"
            --no-default-features
            --locked

      - name: Create dummy .env file for docker-compose
        run: |
          touch .env

      - name: Run application in docker-compose
        env:
          APP_ENVIRONMENT: local
          POSTGRES_USER: ${{ matrix.pg-user }}
          POSTGRES_PASSWORD: ${{ matrix.pg-password }}
          POSTGRES_DB: ${{ matrix.pg-db }}
        run: |
          docker-compose up -d

      - name: Check sqlx-data.json is up-to-date
        env:
          DATABASE_URL: postgres://${{ matrix.pg-user }}:${{ matrix.pg-password }}@localhost:5432/${{ matrix.pg-db }}
        run: |
          cargo sqlx prepare --check -- --bin chocoapi

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pg-user: [postgres]
        pg-password: [LOCALTESTINGxmhu5jVVwJ4sMlz7DAdKf0z4QPFY9Yc]
        pg-db: [chocodb]
        sqlx-version: [0.6.0]
        sqlx-features: ["postgres rustls"]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ matrix.pg-user }}
          POSTGRES_PASSWORD: ${{ matrix.pg-password }}
          POSTGRES_DB: ${{ matrix.pg-db }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ matrix.sqlx-version }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ matrix.sqlx-version }}
            --features "${{ matrix.sqlx-features }}"
            --no-default-features
            --locked

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pg-user: [postgres]
        pg-password: [LOCALTESTINGxmhu5jVVwJ4sMlz7DAdKf0z4QPFY9Yc]
        pg-db: [chocodb]
        sqlx-version: [0.6.0]
        sqlx-features: ["postgres rustls"]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ matrix.pg-user }}
          POSTGRES_PASSWORD: ${{ matrix.pg-password }}
          POSTGRES_DB: ${{ matrix.pg-db }}
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache sqlx-cli
        uses: actions/cache@v3
        id: cache-sqlx
        with:
          path: |
            ~/.cargo/bin/sqlx
          key: ${{ runner.os }}-sqlx-${{ matrix.sqlx-version }}

      - name: Install sqlx-cli
        uses: actions-rs/cargo@v1
        if: steps.cache-sqlx.outputs.cache-hit == false
        with:
          command: install
          args: >
            sqlx-cli
            --force
            --version=${{ matrix.sqlx-version }}
            --features "${{ matrix.sqlx-features }}"
            --no-default-features
            --locked

      - name: Run cargo-tarpaulin
        env:
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "--ignore-tests --avoid-cfg-tarpaulin"
